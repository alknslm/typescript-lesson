--Tip Kullanımı
let age: number = 25;
**web servislerden gelen tipini bilmediğimiz değerler için  ""let age : any;""

Union Types
let age : number | string | = true ----> Bir değişken için birden fazla tür verilebilir.

Literal Type
let statusResult : 'pending' | 'approved' | 'rejected'; ---> bu değerlerden bir tanesi setlenebilir başkası kabul edilmez.

Array
let names : string[] = ["Ahmet", "Selim", "Mehmet"];
let names : Array<string> = ["Ahmet", "Selim", "Mehmet"];   İki şekilde de array kullanılabilir.

Karışık elemanlı dizi
let mixedArray : (string | number)[] = ["Ali", 1, 2, "Mehmet"];

-----------------------------------------------------------------------

  //! PARTIAL - REQUIRED - READONLY- PICK - OMIT
  //* PARTIAL   -> interface ile alınan datalardan ne kadardını yazarsan o kadarını kabul eder. Olmayanı hata olarak göstermez (olsada olur olmasada)  
  // //? const kullanici1 : Partial<Kullanici>
  //* REQUIRED  -> soru işaretli olsa da zorunlu alan gibi davranır (name? : string) required yazınca zorunlu hale gelir
  //* READONLY  -> data class içinde yazanlar hariç dışarda nveri değiştirilmesine izin vermez kullanici1.name = "ali" yazılmaz.
  //* PICK      -> sadece bir tane attribute varmış gibi davran.
  //? const kullanici1 : Pick<Kullanici, "name">  sadece name varmış gibi kabul eder.
  //* OMIT      -> buda yazılan attribute dışındaki değerleri al demek
  //? const kullanici1 : Omit<Kullanici, "name"> name dışındaki diğer değerleri al
